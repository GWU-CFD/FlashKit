# Library specified configuration literals for FlashKit.

[build]

  [build.simulation]
  binary  = 'flash4'   # FLASH binary file name
  success = 'SUCCESS'  # string in output indicating success
  timeout = 600        # time allowed in seconds for build

[create]
  
  [create.batch]
  template = 'batches'  # variable in flash.toml for templates
  padsect  = 0          # padding for section footer
  nosource = [          # library templates (batch) keys ignored
    'bash', 'comment']

  [create.block]
  grids  = ['center', 'facex', 'facey', 'facez'] # defined staggered grids
  method = 'uniform'      # default intialization method
  name   = 'initBlock.h5' # filename holding initial block data
  switch = 1024           # number of points before show progress  
  linewidth = 120         # line width if ouput to screen
  optionpad = 5           # padding for option printing
  tablespad = 10          # padding for table printing
  precision = 6           # precision if output to screen

  [create.grid]
  axes   = ['i', 'j', 'k'] # defined names for dimensions
  coords = ['x', 'y', 'z'] # defined coordinate directions
  label  = 'Faces'       # directional label (e.g., xfaces)
  name   = 'initGrid.h5' # filename holding initial grid data
  switch = 1000000       # number of points before show progress
  linewidth = 120        # line width if ouput to screen
  optionpad = 5          # padding for option printing
  precision = 6          # precision if output to screen

  [create.interp]
  method = 'linear' # interpolation kernal
  switch = 1        # number of points before show progress  
  linewidth = 120   # line width if ouput to screen
  tablespad = 10    # padding for table printing
  precision = 6     # precision if output to screen

  [create.par]
  filename = 'flash.par'  # name of file holding runtime parameters
  template = 'templates'  # variable in flash.toml for templates
  padname  = 2            # padding for parameter names           
  padnote  = 4            # padding for parameter comments
  padsect  = 0            # padding for section footer
  nosource = ['2d']       # library templates (parameter) keys ignored

  [create.xdmf]
  switch = 10   # number of files before showing progress

[core]

  [core.configure]
  base  = ['jobs']     # default roots of the tree
  file  = 'flash.toml' # name of file holding user options
  label = 'base'       # label for path var written to tree options
  max   = 100          # maximum levels to walk building tree
  path  = ''           # relative path to begin directory walk
  root  = 'root'       # variable in flash.toml for root of tree
  user  = 'user'       # label prefix for trees in Configuration

  [core.logger]
  console  = '%(message)s'  # console logging handler format
  error = '%(levelname)s - %(message)s' # stderr logging handler format
  record = '%(asctime)s - %(levelname)s - %(module)s %(funcName)s - %(message)s' # stderr logging handler format
  trace = '%(asctime)s - %(message)s' # traceback logging handler format
  logfile = 'flashkit.log' # name of the standard logging file
  excfile = 'traceback.log' # name of the traceback logging file

  [core.options]
  mindef = 12     # minimum width for option names (without pad)
  minmap = 12     # minumum width for mapping names (without pad)
  paddef = 4      # padding for option names
  padmap = 4      # padding for mapping names

  [core.parallel]
  commands     = ['mpirun', 'mpiexec'] # commands expected for launching mpi
  distribution = 'mpi4py' # python distribution supporting mpi
  root         = 0        # root process number
  size         = 1        # number of processes in serial execution 			

  [core.progress]
  blanking = ' '    # blank character for bar
  cyclings = 5.0    # seconds per cycle of unknown bar
  entrance = '    ' # entrance characters prior to bar
  progress = 36     # width of progress bar itself
  sentinal = 'â–ˆ'    # filled character for bar
  terminal = 120    # width of progress bar message
  updating = 30     # fps for updating the progress bar

  [core.stream]
  ignore = 'ignore' # specific providable flag to ignore configuration tree

[support]

  [support.flow]
  const    = 0.0      # constant; (x)+b  scalar for constant term
  freq     = 1.0      # constant; (x*f)  scalar for domain scale
  shift    = 0.0      # constant; (x+s)  scalar for domain shift
  scale    = 1.0      # constant; m(x)   scalar for linear scale
  width    = 1.0      # constant; (x)/w  scalar for linear norm
  methods  = [        # supported methods
    'constant',
    'sinusoid',
    'stratified',
    'uniform'
    ]
  function = 'fields' # default python function name in source
  source   = 'blocks' # default source file
  
  [support.stretch]
  alpha     = 0.5             # constant; first scalar parameter
  column    = [0, 1, 2]       # default columns to read from asci
  delimiter = ','             # default delimiters when reading from asci
  header    = 1               # default skip lines when reading from asci
  function  = ['x', 'y', 'z'] # default python function names in source
  methods   = ['ascii', 'python', 'uniform', 'tanh_mid']  # supported methods
  source    = 'grid'          # default source file

  [support.template]
  filemax  = 10           # maximum templates; files per level
  sentinal = '_'          # leading char for indexed lookup and comments
  tagging  = 'comment'    # section key for tagging variables
  sourcing = 'sources'    # section key for sourcing data
  sinking  = 'sinks'      # section key for sinking data
  title    = 'title'      # section key for the title
  supports = [            # supported tags in the tagging sub-section
    'header',    # tag for section header string
    'keep',      # tag for keeping an empty section
    'footer',    # tag for section footer string
    'noheader',  # tag for eliminating header
    'nofooter',  # tag for eliminating footer
    'number',    # tag for section ordering 
    'sorted',    # tag for sorting section parameters
    ]

